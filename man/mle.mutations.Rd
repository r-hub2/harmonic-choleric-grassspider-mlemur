% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{mle.mutations}
\alias{mle.mutations}
\title{Estimate m using Maximum Likelihood Method and calculate 95 percent CI using inverted Likelihood Ratio Test}
\usage{
mle.mutations(
  data,
  e = 1,
  w = 1,
  lag = 0,
  poisson = 0,
  death = 0,
  phi = 0,
  cv = 0,
  confint = TRUE,
  ci.level = 0.95,
  verbose = FALSE
)
}
\arguments{
\item{data}{a vector of integer-valued colony counts.}

\item{e}{plating efficiency; a positive number not bigger than 1.}

\item{w}{mutant relative fitness; a positive number.}

\item{lag}{phenotypic lag; a non-negative number.}

\item{poisson}{average number of residual Poisson-distributed mutations on the plate; a non-negative number.}

\item{death}{death probability of wild-type and mutant cells; a non-negative number smaller than 0.5; relative (d)eath rate
and death (p)robability are connected by the relation d = p/(1-p); p = d/(1+d).}

\item{phi}{relative size of the inoculum (N0/Nt); a non-negative number.}

\item{cv}{coefficient of variation of the final number of cells in each culture.}

\item{confint}{if TRUE (default), confidence intervals at ci.level will be calculated.}

\item{ci.level}{confidence interval size, default 0.95.}

\item{verbose}{if TRUE, mlemur will print messages to the console.}
}
\value{
a single non-negative value of m, or a vector of length 3 containing MLE of m as well lower and upper limit
of 95 percent CI.
}
\description{
This function finds Maximum Likelihood Estimate of m, the average number of mutations in culture.
Then it proceeds to find Likelihood Ratio-based confidence limits for m. It is loosely based on newton.LD,
newton.LD.plating, newton.B0, confint.LD, confint.LD.plating, and confint.B0 functions from rSalvador,
simplified and optimised to avoid redundant computations. It uses a hybrid Newton-bisection
algorithm as well as arbitrary-precision arithmetic if necessary for better stability.
}
\examples{
mle.mutations(data = c(67, 12, 112, 24, 2151, 159, 102, 60, 32, 26))
mle.mutations(data = c(71, 19, 4, 32, 12, 74, 0, 35, 8, 13, 9, 5000, 31, 6, 10, 106, 0, 22, 4, 69,
30, 47, 237, 15, 74, 89, 135, 11, 30, 1), lag = 2, cv = 0.3, ci.level = 0.68)
}
\references{
Zheng Q. Statistical and algorithmic methods for fluctuation analysis with SALVADOR as an implementation. Math Biosci.
2002;176: 237–252. doi:10.1016/S0025-5564(02)00087-1

Zheng Q. New algorithms for Luria-Delbrück fluctuation analysis. Math Biosci.
2005;196: 198–214. doi:10.1016/j.mbs.2005.03.011

Zheng Q. On Bartlett’s formulation of the Luria-Delbrück mutation model. Math Biosci.
2008;215: 48–54. doi:10.1016/j.mbs.2008.05.005

Zheng Q. rSalvador: An R package for the fluctuation experiment. G3 Genes, Genomes, Genet.
2017;7: 3849–3856. doi:10.1534/g3.117.300120
}
